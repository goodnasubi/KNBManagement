//------------------------------------------------------------------------------
// <auto-generated>
//    このコードはテンプレートから生成されました。
//
//    このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//    このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM リレーションシップのメタデータ

[assembly: EdmRelationshipAttribute("KN_BManageModel", "CompanyJournal", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KNBManagement.Web.Company), "Journal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KNBManagement.Web.Journal), true)]
[assembly: EdmRelationshipAttribute("KN_BManageModel", "CompanySlip", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KNBManagement.Web.Company), "Slip", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KNBManagement.Web.Slip), true)]
[assembly: EdmRelationshipAttribute("KN_BManageModel", "SlipTypeSlip", "SlipType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KNBManagement.Web.SlipType), "Slip", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KNBManagement.Web.Slip), true)]
[assembly: EdmRelationshipAttribute("KN_BManageModel", "SlipSlipDetail", "Slip", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KNBManagement.Web.Slip), "SlipDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KNBManagement.Web.SlipDetail), true)]
[assembly: EdmRelationshipAttribute("KN_BManageModel", "FK_CompanyJounalItem1", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KNBManagement.Web.Company), "JournalItemComp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KNBManagement.Web.JournalItemComp), true)]
[assembly: EdmRelationshipAttribute("KN_BManageModel", "BusinessTypeJournalItemBiz", "BusinessType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KNBManagement.Web.BusinessType), "JournalItemBiz", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KNBManagement.Web.JournalItemBiz), true)]
[assembly: EdmRelationshipAttribute("KN_BManageModel", "CompanyEmployee", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KNBManagement.Web.Company), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KNBManagement.Web.Employee), true)]
[assembly: EdmRelationshipAttribute("KN_BManageModel", "JournalJournalDetail", "Journal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KNBManagement.Web.Journal), "JournalDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KNBManagement.Web.JournalDetail), true)]
[assembly: EdmRelationshipAttribute("KN_BManageModel", "BusinessTypeCompany", "BusinessType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KNBManagement.Web.BusinessType), "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KNBManagement.Web.Company), true)]
[assembly: EdmRelationshipAttribute("KN_BManageModel", "CompanyJournalDetail", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KNBManagement.Web.Company), "JournalDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KNBManagement.Web.JournalDetail), true)]

#endregion

namespace KNBManagement.Web
{
    #region コンテキスト
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    public partial class KN_BManageEntities : ObjectContext
    {
        #region コンストラクター
    
        /// <summary>
        /// アプリケーション構成ファイルの 'KN_BManageEntities' セクションにある接続文字列を使用して新しい KN_BManageEntities オブジェクトを初期化します。
        /// </summary>
        public KN_BManageEntities() : base("name=KN_BManageEntities", "KN_BManageEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい KN_BManageEntities オブジェクトを初期化します。
        /// </summary>
        public KN_BManageEntities(string connectionString) : base(connectionString, "KN_BManageEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい KN_BManageEntities オブジェクトを初期化します。
        /// </summary>
        public KN_BManageEntities(EntityConnection connection) : base(connection, "KN_BManageEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分メソッド
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Journal> Journal
        {
            get
            {
                if ((_Journal == null))
                {
                    _Journal = base.CreateObjectSet<Journal>("Journal");
                }
                return _Journal;
            }
        }
        private ObjectSet<Journal> _Journal;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<JournalDetail> JournalDetail
        {
            get
            {
                if ((_JournalDetail == null))
                {
                    _JournalDetail = base.CreateObjectSet<JournalDetail>("JournalDetail");
                }
                return _JournalDetail;
            }
        }
        private ObjectSet<JournalDetail> _JournalDetail;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<BusinessType> BusinessTypes
        {
            get
            {
                if ((_BusinessTypes == null))
                {
                    _BusinessTypes = base.CreateObjectSet<BusinessType>("BusinessTypes");
                }
                return _BusinessTypes;
            }
        }
        private ObjectSet<BusinessType> _BusinessTypes;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<SlipType> SlipTypes
        {
            get
            {
                if ((_SlipTypes == null))
                {
                    _SlipTypes = base.CreateObjectSet<SlipType>("SlipTypes");
                }
                return _SlipTypes;
            }
        }
        private ObjectSet<SlipType> _SlipTypes;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Slip> Slips
        {
            get
            {
                if ((_Slips == null))
                {
                    _Slips = base.CreateObjectSet<Slip>("Slips");
                }
                return _Slips;
            }
        }
        private ObjectSet<Slip> _Slips;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<SlipDetail> SlipDetails
        {
            get
            {
                if ((_SlipDetails == null))
                {
                    _SlipDetails = base.CreateObjectSet<SlipDetail>("SlipDetails");
                }
                return _SlipDetails;
            }
        }
        private ObjectSet<SlipDetail> _SlipDetails;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<JournalItemBiz> JournalItemBizs
        {
            get
            {
                if ((_JournalItemBizs == null))
                {
                    _JournalItemBizs = base.CreateObjectSet<JournalItemBiz>("JournalItemBizs");
                }
                return _JournalItemBizs;
            }
        }
        private ObjectSet<JournalItemBiz> _JournalItemBizs;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<JournalItemComp> JournalItemComps
        {
            get
            {
                if ((_JournalItemComps == null))
                {
                    _JournalItemComps = base.CreateObjectSet<JournalItemComp>("JournalItemComps");
                }
                return _JournalItemComps;
            }
        }
        private ObjectSet<JournalItemComp> _JournalItemComps;

        #endregion
        #region AddTo メソッド
    
        /// <summary>
        /// Companies EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Employees EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Journal EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToJournal(Journal journal)
        {
            base.AddObject("Journal", journal);
        }
    
        /// <summary>
        /// JournalDetail EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToJournalDetail(JournalDetail journalDetail)
        {
            base.AddObject("JournalDetail", journalDetail);
        }
    
        /// <summary>
        /// BusinessTypes EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToBusinessTypes(BusinessType businessType)
        {
            base.AddObject("BusinessTypes", businessType);
        }
    
        /// <summary>
        /// SlipTypes EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToSlipTypes(SlipType slipType)
        {
            base.AddObject("SlipTypes", slipType);
        }
    
        /// <summary>
        /// Slips EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToSlips(Slip slip)
        {
            base.AddObject("Slips", slip);
        }
    
        /// <summary>
        /// SlipDetails EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToSlipDetails(SlipDetail slipDetail)
        {
            base.AddObject("SlipDetails", slipDetail);
        }
    
        /// <summary>
        /// JournalItemBizs EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToJournalItemBizs(JournalItemBiz journalItemBiz)
        {
            base.AddObject("JournalItemBizs", journalItemBiz);
        }
    
        /// <summary>
        /// JournalItemComps EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToJournalItemComps(JournalItemComp journalItemComp)
        {
            base.AddObject("JournalItemComps", journalItemComp);
        }

        #endregion
        #region 関数インポート
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        /// <param name="companyID">使用できるメタデータ ドキュメントはありません。</param>
        public ObjectResult<JournalItems> GetJournalItems(Nullable<global::System.Guid> companyID)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<JournalItems>("GetJournalItems", companyIDParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region エンティティ
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KN_BManageModel", Name="BusinessType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusinessType : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい BusinessType オブジェクトを作成します。
        /// </summary>
        /// <param name="businessTypeID">BusinessTypeID プロパティの初期値。</param>
        public static BusinessType CreateBusinessType(global::System.Guid businessTypeID)
        {
            BusinessType businessType = new BusinessType();
            businessType.BusinessTypeID = businessTypeID;
            return businessType;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BusinessTypeID
        {
            get
            {
                return _BusinessTypeID;
            }
            set
            {
                if (_BusinessTypeID != value)
                {
                    OnBusinessTypeIDChanging(value);
                    ReportPropertyChanging("BusinessTypeID");
                    _BusinessTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BusinessTypeID");
                    OnBusinessTypeIDChanged();
                }
            }
        }
        private global::System.Guid _BusinessTypeID;
        partial void OnBusinessTypeIDChanging(global::System.Guid value);
        partial void OnBusinessTypeIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] TS
        {
            get
            {
                return StructuralObject.GetValidValue(_TS);
            }
            set
            {
                OnTSChanging(value);
                ReportPropertyChanging("TS");
                _TS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TS");
                OnTSChanged();
            }
        }
        private global::System.Byte[] _TS;
        partial void OnTSChanging(global::System.Byte[] value);
        partial void OnTSChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "BusinessTypeJournalItemBiz", "JournalItemBiz")]
        public EntityCollection<JournalItemBiz> JournalItemBizs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JournalItemBiz>("KN_BManageModel.BusinessTypeJournalItemBiz", "JournalItemBiz");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JournalItemBiz>("KN_BManageModel.BusinessTypeJournalItemBiz", "JournalItemBiz", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "BusinessTypeCompany", "Company")]
        public EntityCollection<Company> Companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("KN_BManageModel.BusinessTypeCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("KN_BManageModel.BusinessTypeCompany", "Company", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 会社マスタ
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KN_BManageModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Company オブジェクトを作成します。
        /// </summary>
        /// <param name="companyID">CompanyID プロパティの初期値。</param>
        /// <param name="companyName">CompanyName プロパティの初期値。</param>
        /// <param name="companyKey">CompanyKey プロパティの初期値。</param>
        /// <param name="businessTypeID">BusinessTypeID プロパティの初期値。</param>
        public static Company CreateCompany(global::System.Guid companyID, global::System.String companyName, global::System.String companyKey, global::System.Guid businessTypeID)
        {
            Company company = new Company();
            company.CompanyID = companyID;
            company.CompanyName = companyName;
            company.CompanyKey = companyKey;
            company.BusinessTypeID = businessTypeID;
            return company;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyKey
        {
            get
            {
                return _CompanyKey;
            }
            set
            {
                OnCompanyKeyChanging(value);
                ReportPropertyChanging("CompanyKey");
                _CompanyKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyKey");
                OnCompanyKeyChanged();
            }
        }
        private global::System.String _CompanyKey;
        partial void OnCompanyKeyChanging(global::System.String value);
        partial void OnCompanyKeyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BusinessTypeID
        {
            get
            {
                return _BusinessTypeID;
            }
            set
            {
                OnBusinessTypeIDChanging(value);
                ReportPropertyChanging("BusinessTypeID");
                _BusinessTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusinessTypeID");
                OnBusinessTypeIDChanged();
            }
        }
        private global::System.Guid _BusinessTypeID;
        partial void OnBusinessTypeIDChanging(global::System.Guid value);
        partial void OnBusinessTypeIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] TS
        {
            get
            {
                return StructuralObject.GetValidValue(_TS);
            }
            set
            {
                OnTSChanging(value);
                ReportPropertyChanging("TS");
                _TS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TS");
                OnTSChanged();
            }
        }
        private global::System.Byte[] _TS;
        partial void OnTSChanging(global::System.Byte[] value);
        partial void OnTSChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "CompanyJournal", "Journal")]
        public EntityCollection<Journal> Journal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Journal>("KN_BManageModel.CompanyJournal", "Journal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Journal>("KN_BManageModel.CompanyJournal", "Journal", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "CompanySlip", "Slip")]
        public EntityCollection<Slip> Slips
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Slip>("KN_BManageModel.CompanySlip", "Slip");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Slip>("KN_BManageModel.CompanySlip", "Slip", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "FK_CompanyJounalItem1", "JournalItemComp")]
        public EntityCollection<JournalItemComp> JournalItemComps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JournalItemComp>("KN_BManageModel.FK_CompanyJounalItem1", "JournalItemComp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JournalItemComp>("KN_BManageModel.FK_CompanyJounalItem1", "JournalItemComp", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "CompanyEmployee", "Employee")]
        public EntityCollection<Employee> Employees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("KN_BManageModel.CompanyEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("KN_BManageModel.CompanyEmployee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "BusinessTypeCompany", "BusinessType")]
        public BusinessType BusinessType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessType>("KN_BManageModel.BusinessTypeCompany", "BusinessType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessType>("KN_BManageModel.BusinessTypeCompany", "BusinessType").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessType> BusinessTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessType>("KN_BManageModel.BusinessTypeCompany", "BusinessType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessType>("KN_BManageModel.BusinessTypeCompany", "BusinessType", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "CompanyJournalDetail", "JournalDetail")]
        public EntityCollection<JournalDetail> JournalDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JournalDetail>("KN_BManageModel.CompanyJournalDetail", "JournalDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JournalDetail>("KN_BManageModel.CompanyJournalDetail", "JournalDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 社員マスタ
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KN_BManageModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Employee オブジェクトを作成します。
        /// </summary>
        /// <param name="companyID">CompanyID プロパティの初期値。</param>
        /// <param name="employeeID">EmployeeID プロパティの初期値。</param>
        /// <param name="employeeName">EmployeeName プロパティの初期値。</param>
        /// <param name="loginID">LoginID プロパティの初期値。</param>
        /// <param name="password">Password プロパティの初期値。</param>
        public static Employee CreateEmployee(global::System.Guid companyID, global::System.Guid employeeID, global::System.String employeeName, global::System.String loginID, global::System.String password)
        {
            Employee employee = new Employee();
            employee.CompanyID = companyID;
            employee.EmployeeID = employeeID;
            employee.EmployeeName = employeeName;
            employee.LoginID = loginID;
            employee.Password = password;
            return employee;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                if (_EmployeeID != value)
                {
                    OnEmployeeIDChanging(value);
                    ReportPropertyChanging("EmployeeID");
                    _EmployeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeID");
                    OnEmployeeIDChanged();
                }
            }
        }
        private global::System.Guid _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Guid value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmployeeName
        {
            get
            {
                return _EmployeeName;
            }
            set
            {
                OnEmployeeNameChanging(value);
                ReportPropertyChanging("EmployeeName");
                _EmployeeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmployeeName");
                OnEmployeeNameChanged();
            }
        }
        private global::System.String _EmployeeName;
        partial void OnEmployeeNameChanging(global::System.String value);
        partial void OnEmployeeNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginID
        {
            get
            {
                return _LoginID;
            }
            set
            {
                OnLoginIDChanging(value);
                ReportPropertyChanging("LoginID");
                _LoginID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginID");
                OnLoginIDChanged();
            }
        }
        private global::System.String _LoginID;
        partial void OnLoginIDChanging(global::System.String value);
        partial void OnLoginIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] TS
        {
            get
            {
                return StructuralObject.GetValidValue(_TS);
            }
            set
            {
                OnTSChanging(value);
                ReportPropertyChanging("TS");
                _TS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TS");
                OnTSChanged();
            }
        }
        private global::System.Byte[] _TS;
        partial void OnTSChanging(global::System.Byte[] value);
        partial void OnTSChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "CompanyEmployee", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.CompanyEmployee", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.CompanyEmployee", "Company").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.CompanyEmployee", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("KN_BManageModel.CompanyEmployee", "Company", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 仕訳帳
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KN_BManageModel", Name="Journal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Journal : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Journal オブジェクトを作成します。
        /// </summary>
        /// <param name="companyID">CompanyID プロパティの初期値。</param>
        /// <param name="journalID">JournalID プロパティの初期値。</param>
        /// <param name="employeeID">EmployeeID プロパティの初期値。</param>
        /// <param name="tradingDate">TradingDate プロパティの初期値。</param>
        /// <param name="remarks">Remarks プロパティの初期値。</param>
        public static Journal CreateJournal(global::System.Guid companyID, global::System.Guid journalID, global::System.Guid employeeID, global::System.DateTime tradingDate, global::System.String remarks)
        {
            Journal journal = new Journal();
            journal.CompanyID = companyID;
            journal.JournalID = journalID;
            journal.EmployeeID = employeeID;
            journal.TradingDate = tradingDate;
            journal.Remarks = remarks;
            return journal;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid JournalID
        {
            get
            {
                return _JournalID;
            }
            set
            {
                if (_JournalID != value)
                {
                    OnJournalIDChanging(value);
                    ReportPropertyChanging("JournalID");
                    _JournalID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JournalID");
                    OnJournalIDChanged();
                }
            }
        }
        private global::System.Guid _JournalID;
        partial void OnJournalIDChanging(global::System.Guid value);
        partial void OnJournalIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                OnEmployeeIDChanging(value);
                ReportPropertyChanging("EmployeeID");
                _EmployeeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeID");
                OnEmployeeIDChanged();
            }
        }
        private global::System.Guid _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Guid value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// 取引日
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TradingDate
        {
            get
            {
                return _TradingDate;
            }
            set
            {
                OnTradingDateChanging(value);
                ReportPropertyChanging("TradingDate");
                _TradingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradingDate");
                OnTradingDateChanged();
            }
        }
        private global::System.DateTime _TradingDate;
        partial void OnTradingDateChanging(global::System.DateTime value);
        partial void OnTradingDateChanged();
    
        /// <summary>
        /// 摘要
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] TS
        {
            get
            {
                return StructuralObject.GetValidValue(_TS);
            }
            set
            {
                OnTSChanging(value);
                ReportPropertyChanging("TS");
                _TS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TS");
                OnTSChanged();
            }
        }
        private global::System.Byte[] _TS;
        partial void OnTSChanging(global::System.Byte[] value);
        partial void OnTSChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "CompanyJournal", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.CompanyJournal", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.CompanyJournal", "Company").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.CompanyJournal", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("KN_BManageModel.CompanyJournal", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "JournalJournalDetail", "JournalDetail")]
        public EntityCollection<JournalDetail> JournalDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JournalDetail>("KN_BManageModel.JournalJournalDetail", "JournalDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JournalDetail>("KN_BManageModel.JournalJournalDetail", "JournalDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 仕訳帳詳細
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KN_BManageModel", Name="JournalDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JournalDetail : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい JournalDetail オブジェクトを作成します。
        /// </summary>
        /// <param name="companyID">CompanyID プロパティの初期値。</param>
        /// <param name="journalID">JournalID プロパティの初期値。</param>
        /// <param name="journalDetailID">JournalDetailID プロパティの初期値。</param>
        /// <param name="debitItemID">DebitItemID プロパティの初期値。</param>
        /// <param name="debitMoney">DebitMoney プロパティの初期値。</param>
        /// <param name="creditItemID">CreditItemID プロパティの初期値。</param>
        /// <param name="creditMoney">CreditMoney プロパティの初期値。</param>
        public static JournalDetail CreateJournalDetail(global::System.Guid companyID, global::System.Guid journalID, global::System.Int32 journalDetailID, global::System.Guid debitItemID, global::System.Decimal debitMoney, global::System.Guid creditItemID, global::System.Decimal creditMoney)
        {
            JournalDetail journalDetail = new JournalDetail();
            journalDetail.CompanyID = companyID;
            journalDetail.JournalID = journalID;
            journalDetail.JournalDetailID = journalDetailID;
            journalDetail.DebitItemID = debitItemID;
            journalDetail.DebitMoney = debitMoney;
            journalDetail.CreditItemID = creditItemID;
            journalDetail.CreditMoney = creditMoney;
            return journalDetail;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid JournalID
        {
            get
            {
                return _JournalID;
            }
            set
            {
                if (_JournalID != value)
                {
                    OnJournalIDChanging(value);
                    ReportPropertyChanging("JournalID");
                    _JournalID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JournalID");
                    OnJournalIDChanged();
                }
            }
        }
        private global::System.Guid _JournalID;
        partial void OnJournalIDChanging(global::System.Guid value);
        partial void OnJournalIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JournalDetailID
        {
            get
            {
                return _JournalDetailID;
            }
            set
            {
                if (_JournalDetailID != value)
                {
                    OnJournalDetailIDChanging(value);
                    ReportPropertyChanging("JournalDetailID");
                    _JournalDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JournalDetailID");
                    OnJournalDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _JournalDetailID;
        partial void OnJournalDetailIDChanging(global::System.Int32 value);
        partial void OnJournalDetailIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DebitItemID
        {
            get
            {
                return _DebitItemID;
            }
            set
            {
                OnDebitItemIDChanging(value);
                ReportPropertyChanging("DebitItemID");
                _DebitItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebitItemID");
                OnDebitItemIDChanged();
            }
        }
        private global::System.Guid _DebitItemID;
        partial void OnDebitItemIDChanging(global::System.Guid value);
        partial void OnDebitItemIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DebitMoney
        {
            get
            {
                return _DebitMoney;
            }
            set
            {
                OnDebitMoneyChanging(value);
                ReportPropertyChanging("DebitMoney");
                _DebitMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebitMoney");
                OnDebitMoneyChanged();
            }
        }
        private global::System.Decimal _DebitMoney;
        partial void OnDebitMoneyChanging(global::System.Decimal value);
        partial void OnDebitMoneyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CreditItemID
        {
            get
            {
                return _CreditItemID;
            }
            set
            {
                OnCreditItemIDChanging(value);
                ReportPropertyChanging("CreditItemID");
                _CreditItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditItemID");
                OnCreditItemIDChanged();
            }
        }
        private global::System.Guid _CreditItemID;
        partial void OnCreditItemIDChanging(global::System.Guid value);
        partial void OnCreditItemIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CreditMoney
        {
            get
            {
                return _CreditMoney;
            }
            set
            {
                OnCreditMoneyChanging(value);
                ReportPropertyChanging("CreditMoney");
                _CreditMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditMoney");
                OnCreditMoneyChanged();
            }
        }
        private global::System.Decimal _CreditMoney;
        partial void OnCreditMoneyChanging(global::System.Decimal value);
        partial void OnCreditMoneyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] TS
        {
            get
            {
                return StructuralObject.GetValidValue(_TS);
            }
            set
            {
                OnTSChanging(value);
                ReportPropertyChanging("TS");
                _TS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TS");
                OnTSChanged();
            }
        }
        private global::System.Byte[] _TS;
        partial void OnTSChanging(global::System.Byte[] value);
        partial void OnTSChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "JournalJournalDetail", "Journal")]
        public Journal Journal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("KN_BManageModel.JournalJournalDetail", "Journal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("KN_BManageModel.JournalJournalDetail", "Journal").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Journal> JournalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Journal>("KN_BManageModel.JournalJournalDetail", "Journal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Journal>("KN_BManageModel.JournalJournalDetail", "Journal", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "CompanyJournalDetail", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.CompanyJournalDetail", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.CompanyJournalDetail", "Company").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.CompanyJournalDetail", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("KN_BManageModel.CompanyJournalDetail", "Company", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KN_BManageModel", Name="JournalItemBiz")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JournalItemBiz : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい JournalItemBiz オブジェクトを作成します。
        /// </summary>
        /// <param name="businessTypeID">BusinessTypeID プロパティの初期値。</param>
        /// <param name="journalItemID">JournalItemID プロパティの初期値。</param>
        /// <param name="journalName">JournalName プロパティの初期値。</param>
        /// <param name="journalGroup">JournalGroup プロパティの初期値。</param>
        /// <param name="keyword">Keyword プロパティの初期値。</param>
        public static JournalItemBiz CreateJournalItemBiz(global::System.Guid businessTypeID, global::System.Guid journalItemID, global::System.String journalName, global::System.String journalGroup, global::System.String keyword)
        {
            JournalItemBiz journalItemBiz = new JournalItemBiz();
            journalItemBiz.BusinessTypeID = businessTypeID;
            journalItemBiz.JournalItemID = journalItemID;
            journalItemBiz.JournalName = journalName;
            journalItemBiz.JournalGroup = journalGroup;
            journalItemBiz.Keyword = keyword;
            return journalItemBiz;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BusinessTypeID
        {
            get
            {
                return _BusinessTypeID;
            }
            set
            {
                if (_BusinessTypeID != value)
                {
                    OnBusinessTypeIDChanging(value);
                    ReportPropertyChanging("BusinessTypeID");
                    _BusinessTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BusinessTypeID");
                    OnBusinessTypeIDChanged();
                }
            }
        }
        private global::System.Guid _BusinessTypeID;
        partial void OnBusinessTypeIDChanging(global::System.Guid value);
        partial void OnBusinessTypeIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid JournalItemID
        {
            get
            {
                return _JournalItemID;
            }
            set
            {
                if (_JournalItemID != value)
                {
                    OnJournalItemIDChanging(value);
                    ReportPropertyChanging("JournalItemID");
                    _JournalItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JournalItemID");
                    OnJournalItemIDChanged();
                }
            }
        }
        private global::System.Guid _JournalItemID;
        partial void OnJournalItemIDChanging(global::System.Guid value);
        partial void OnJournalItemIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JournalName
        {
            get
            {
                return _JournalName;
            }
            set
            {
                OnJournalNameChanging(value);
                ReportPropertyChanging("JournalName");
                _JournalName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JournalName");
                OnJournalNameChanged();
            }
        }
        private global::System.String _JournalName;
        partial void OnJournalNameChanging(global::System.String value);
        partial void OnJournalNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JournalGroup
        {
            get
            {
                return _JournalGroup;
            }
            set
            {
                OnJournalGroupChanging(value);
                ReportPropertyChanging("JournalGroup");
                _JournalGroup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JournalGroup");
                OnJournalGroupChanged();
            }
        }
        private global::System.String _JournalGroup;
        partial void OnJournalGroupChanging(global::System.String value);
        partial void OnJournalGroupChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Keyword
        {
            get
            {
                return _Keyword;
            }
            set
            {
                OnKeywordChanging(value);
                ReportPropertyChanging("Keyword");
                _Keyword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Keyword");
                OnKeywordChanged();
            }
        }
        private global::System.String _Keyword;
        partial void OnKeywordChanging(global::System.String value);
        partial void OnKeywordChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] TS
        {
            get
            {
                return StructuralObject.GetValidValue(_TS);
            }
            set
            {
                OnTSChanging(value);
                ReportPropertyChanging("TS");
                _TS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TS");
                OnTSChanged();
            }
        }
        private global::System.Byte[] _TS;
        partial void OnTSChanging(global::System.Byte[] value);
        partial void OnTSChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "BusinessTypeJournalItemBiz", "BusinessType")]
        public BusinessType BusinessType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessType>("KN_BManageModel.BusinessTypeJournalItemBiz", "BusinessType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessType>("KN_BManageModel.BusinessTypeJournalItemBiz", "BusinessType").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BusinessType> BusinessTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BusinessType>("KN_BManageModel.BusinessTypeJournalItemBiz", "BusinessType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BusinessType>("KN_BManageModel.BusinessTypeJournalItemBiz", "BusinessType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KN_BManageModel", Name="JournalItemComp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JournalItemComp : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい JournalItemComp オブジェクトを作成します。
        /// </summary>
        /// <param name="companyID">CompanyID プロパティの初期値。</param>
        /// <param name="journalItemID">JournalItemID プロパティの初期値。</param>
        /// <param name="journalName">JournalName プロパティの初期値。</param>
        /// <param name="journalGroup">JournalGroup プロパティの初期値。</param>
        /// <param name="keyword">Keyword プロパティの初期値。</param>
        public static JournalItemComp CreateJournalItemComp(global::System.Guid companyID, global::System.Guid journalItemID, global::System.String journalName, global::System.String journalGroup, global::System.String keyword)
        {
            JournalItemComp journalItemComp = new JournalItemComp();
            journalItemComp.CompanyID = companyID;
            journalItemComp.JournalItemID = journalItemID;
            journalItemComp.JournalName = journalName;
            journalItemComp.JournalGroup = journalGroup;
            journalItemComp.Keyword = keyword;
            return journalItemComp;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid JournalItemID
        {
            get
            {
                return _JournalItemID;
            }
            set
            {
                if (_JournalItemID != value)
                {
                    OnJournalItemIDChanging(value);
                    ReportPropertyChanging("JournalItemID");
                    _JournalItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JournalItemID");
                    OnJournalItemIDChanged();
                }
            }
        }
        private global::System.Guid _JournalItemID;
        partial void OnJournalItemIDChanging(global::System.Guid value);
        partial void OnJournalItemIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JournalName
        {
            get
            {
                return _JournalName;
            }
            set
            {
                OnJournalNameChanging(value);
                ReportPropertyChanging("JournalName");
                _JournalName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JournalName");
                OnJournalNameChanged();
            }
        }
        private global::System.String _JournalName;
        partial void OnJournalNameChanging(global::System.String value);
        partial void OnJournalNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JournalGroup
        {
            get
            {
                return _JournalGroup;
            }
            set
            {
                OnJournalGroupChanging(value);
                ReportPropertyChanging("JournalGroup");
                _JournalGroup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JournalGroup");
                OnJournalGroupChanged();
            }
        }
        private global::System.String _JournalGroup;
        partial void OnJournalGroupChanging(global::System.String value);
        partial void OnJournalGroupChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Keyword
        {
            get
            {
                return _Keyword;
            }
            set
            {
                OnKeywordChanging(value);
                ReportPropertyChanging("Keyword");
                _Keyword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Keyword");
                OnKeywordChanged();
            }
        }
        private global::System.String _Keyword;
        partial void OnKeywordChanging(global::System.String value);
        partial void OnKeywordChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] TS
        {
            get
            {
                return StructuralObject.GetValidValue(_TS);
            }
            set
            {
                OnTSChanging(value);
                ReportPropertyChanging("TS");
                _TS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TS");
                OnTSChanged();
            }
        }
        private global::System.Byte[] _TS;
        partial void OnTSChanging(global::System.Byte[] value);
        partial void OnTSChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "FK_CompanyJounalItem1", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.FK_CompanyJounalItem1", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.FK_CompanyJounalItem1", "Company").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.FK_CompanyJounalItem1", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("KN_BManageModel.FK_CompanyJounalItem1", "Company", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KN_BManageModel", Name="Slip")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Slip : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Slip オブジェクトを作成します。
        /// </summary>
        /// <param name="companyID">CompanyID プロパティの初期値。</param>
        /// <param name="slipID">SlipID プロパティの初期値。</param>
        /// <param name="tradingDate">TradingDate プロパティの初期値。</param>
        /// <param name="remarks">Remarks プロパティの初期値。</param>
        /// <param name="slipTypeID">SlipTypeID プロパティの初期値。</param>
        /// <param name="journalItemID">JournalItemID プロパティの初期値。</param>
        public static Slip CreateSlip(global::System.Guid companyID, global::System.Guid slipID, global::System.DateTime tradingDate, global::System.String remarks, global::System.Int32 slipTypeID, global::System.Guid journalItemID)
        {
            Slip slip = new Slip();
            slip.CompanyID = companyID;
            slip.SlipID = slipID;
            slip.TradingDate = tradingDate;
            slip.Remarks = remarks;
            slip.SlipTypeID = slipTypeID;
            slip.JournalItemID = journalItemID;
            return slip;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SlipID
        {
            get
            {
                return _SlipID;
            }
            set
            {
                if (_SlipID != value)
                {
                    OnSlipIDChanging(value);
                    ReportPropertyChanging("SlipID");
                    _SlipID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SlipID");
                    OnSlipIDChanged();
                }
            }
        }
        private global::System.Guid _SlipID;
        partial void OnSlipIDChanging(global::System.Guid value);
        partial void OnSlipIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TradingDate
        {
            get
            {
                return _TradingDate;
            }
            set
            {
                OnTradingDateChanging(value);
                ReportPropertyChanging("TradingDate");
                _TradingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TradingDate");
                OnTradingDateChanged();
            }
        }
        private global::System.DateTime _TradingDate;
        partial void OnTradingDateChanging(global::System.DateTime value);
        partial void OnTradingDateChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remarks
        {
            get
            {
                return _Remarks;
            }
            set
            {
                OnRemarksChanging(value);
                ReportPropertyChanging("Remarks");
                _Remarks = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remarks");
                OnRemarksChanged();
            }
        }
        private global::System.String _Remarks;
        partial void OnRemarksChanging(global::System.String value);
        partial void OnRemarksChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SlipTypeID
        {
            get
            {
                return _SlipTypeID;
            }
            set
            {
                OnSlipTypeIDChanging(value);
                ReportPropertyChanging("SlipTypeID");
                _SlipTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SlipTypeID");
                OnSlipTypeIDChanged();
            }
        }
        private global::System.Int32 _SlipTypeID;
        partial void OnSlipTypeIDChanging(global::System.Int32 value);
        partial void OnSlipTypeIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid JournalItemID
        {
            get
            {
                return _JournalItemID;
            }
            set
            {
                OnJournalItemIDChanging(value);
                ReportPropertyChanging("JournalItemID");
                _JournalItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JournalItemID");
                OnJournalItemIDChanged();
            }
        }
        private global::System.Guid _JournalItemID;
        partial void OnJournalItemIDChanging(global::System.Guid value);
        partial void OnJournalItemIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] TS
        {
            get
            {
                return StructuralObject.GetValidValue(_TS);
            }
            set
            {
                OnTSChanging(value);
                ReportPropertyChanging("TS");
                _TS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TS");
                OnTSChanged();
            }
        }
        private global::System.Byte[] _TS;
        partial void OnTSChanging(global::System.Byte[] value);
        partial void OnTSChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "CompanySlip", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.CompanySlip", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.CompanySlip", "Company").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("KN_BManageModel.CompanySlip", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("KN_BManageModel.CompanySlip", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "SlipTypeSlip", "SlipType")]
        public SlipType SlipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SlipType>("KN_BManageModel.SlipTypeSlip", "SlipType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SlipType>("KN_BManageModel.SlipTypeSlip", "SlipType").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SlipType> SlipTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SlipType>("KN_BManageModel.SlipTypeSlip", "SlipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SlipType>("KN_BManageModel.SlipTypeSlip", "SlipType", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "SlipSlipDetail", "SlipDetail")]
        public EntityCollection<SlipDetail> SlipDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SlipDetail>("KN_BManageModel.SlipSlipDetail", "SlipDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SlipDetail>("KN_BManageModel.SlipSlipDetail", "SlipDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KN_BManageModel", Name="SlipDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SlipDetail : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい SlipDetail オブジェクトを作成します。
        /// </summary>
        /// <param name="companyID">CompanyID プロパティの初期値。</param>
        /// <param name="slipID">SlipID プロパティの初期値。</param>
        /// <param name="slipDetailID">SlipDetailID プロパティの初期値。</param>
        /// <param name="journalItemID">JournalItemID プロパティの初期値。</param>
        /// <param name="journalMoney">JournalMoney プロパティの初期値。</param>
        /// <param name="detailOrder">DetailOrder プロパティの初期値。</param>
        public static SlipDetail CreateSlipDetail(global::System.Guid companyID, global::System.Guid slipID, global::System.Guid slipDetailID, global::System.Guid journalItemID, global::System.Decimal journalMoney, global::System.Int32 detailOrder)
        {
            SlipDetail slipDetail = new SlipDetail();
            slipDetail.CompanyID = companyID;
            slipDetail.SlipID = slipID;
            slipDetail.SlipDetailID = slipDetailID;
            slipDetail.JournalItemID = journalItemID;
            slipDetail.JournalMoney = journalMoney;
            slipDetail.DetailOrder = detailOrder;
            return slipDetail;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Guid _CompanyID;
        partial void OnCompanyIDChanging(global::System.Guid value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SlipID
        {
            get
            {
                return _SlipID;
            }
            set
            {
                if (_SlipID != value)
                {
                    OnSlipIDChanging(value);
                    ReportPropertyChanging("SlipID");
                    _SlipID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SlipID");
                    OnSlipIDChanged();
                }
            }
        }
        private global::System.Guid _SlipID;
        partial void OnSlipIDChanging(global::System.Guid value);
        partial void OnSlipIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SlipDetailID
        {
            get
            {
                return _SlipDetailID;
            }
            set
            {
                if (_SlipDetailID != value)
                {
                    OnSlipDetailIDChanging(value);
                    ReportPropertyChanging("SlipDetailID");
                    _SlipDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SlipDetailID");
                    OnSlipDetailIDChanged();
                }
            }
        }
        private global::System.Guid _SlipDetailID;
        partial void OnSlipDetailIDChanging(global::System.Guid value);
        partial void OnSlipDetailIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid JournalItemID
        {
            get
            {
                return _JournalItemID;
            }
            set
            {
                OnJournalItemIDChanging(value);
                ReportPropertyChanging("JournalItemID");
                _JournalItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JournalItemID");
                OnJournalItemIDChanged();
            }
        }
        private global::System.Guid _JournalItemID;
        partial void OnJournalItemIDChanging(global::System.Guid value);
        partial void OnJournalItemIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal JournalMoney
        {
            get
            {
                return _JournalMoney;
            }
            set
            {
                OnJournalMoneyChanging(value);
                ReportPropertyChanging("JournalMoney");
                _JournalMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JournalMoney");
                OnJournalMoneyChanged();
            }
        }
        private global::System.Decimal _JournalMoney;
        partial void OnJournalMoneyChanging(global::System.Decimal value);
        partial void OnJournalMoneyChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DetailOrder
        {
            get
            {
                return _DetailOrder;
            }
            set
            {
                OnDetailOrderChanging(value);
                ReportPropertyChanging("DetailOrder");
                _DetailOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DetailOrder");
                OnDetailOrderChanged();
            }
        }
        private global::System.Int32 _DetailOrder;
        partial void OnDetailOrderChanging(global::System.Int32 value);
        partial void OnDetailOrderChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] TS
        {
            get
            {
                return StructuralObject.GetValidValue(_TS);
            }
            set
            {
                OnTSChanging(value);
                ReportPropertyChanging("TS");
                _TS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TS");
                OnTSChanged();
            }
        }
        private global::System.Byte[] _TS;
        partial void OnTSChanging(global::System.Byte[] value);
        partial void OnTSChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "SlipSlipDetail", "Slip")]
        public Slip Slip
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Slip>("KN_BManageModel.SlipSlipDetail", "Slip").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Slip>("KN_BManageModel.SlipSlipDetail", "Slip").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Slip> SlipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Slip>("KN_BManageModel.SlipSlipDetail", "Slip");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Slip>("KN_BManageModel.SlipSlipDetail", "Slip", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 伝票タイプ
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KN_BManageModel", Name="SlipType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SlipType : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい SlipType オブジェクトを作成します。
        /// </summary>
        /// <param name="slipTypeID">SlipTypeID プロパティの初期値。</param>
        /// <param name="name">Name プロパティの初期値。</param>
        public static SlipType CreateSlipType(global::System.Int32 slipTypeID, global::System.String name)
        {
            SlipType slipType = new SlipType();
            slipType.SlipTypeID = slipTypeID;
            slipType.Name = name;
            return slipType;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SlipTypeID
        {
            get
            {
                return _SlipTypeID;
            }
            set
            {
                if (_SlipTypeID != value)
                {
                    OnSlipTypeIDChanging(value);
                    ReportPropertyChanging("SlipTypeID");
                    _SlipTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SlipTypeID");
                    OnSlipTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _SlipTypeID;
        partial void OnSlipTypeIDChanging(global::System.Int32 value);
        partial void OnSlipTypeIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] TS
        {
            get
            {
                return StructuralObject.GetValidValue(_TS);
            }
            set
            {
                OnTSChanging(value);
                ReportPropertyChanging("TS");
                _TS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TS");
                OnTSChanged();
            }
        }
        private global::System.Byte[] _TS;
        partial void OnTSChanging(global::System.Byte[] value);
        partial void OnTSChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KN_BManageModel", "SlipTypeSlip", "Slip")]
        public EntityCollection<Slip> Slips
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Slip>("KN_BManageModel.SlipTypeSlip", "Slip");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Slip>("KN_BManageModel.SlipTypeSlip", "Slip", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="KN_BManageModel", Name="JournalItems")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class JournalItems : ComplexObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい JournalItems オブジェクトを作成します。
        /// </summary>
        /// <param name="journalItemID">JournalItemID プロパティの初期値。</param>
        /// <param name="journalName">JournalName プロパティの初期値。</param>
        /// <param name="journalGroup">JournalGroup プロパティの初期値。</param>
        /// <param name="keyword">Keyword プロパティの初期値。</param>
        public static JournalItems CreateJournalItems(global::System.Guid journalItemID, global::System.String journalName, global::System.String journalGroup, global::System.String keyword)
        {
            JournalItems journalItems = new JournalItems();
            journalItems.JournalItemID = journalItemID;
            journalItems.JournalName = journalName;
            journalItems.JournalGroup = journalGroup;
            journalItems.Keyword = keyword;
            return journalItems;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid JournalItemID
        {
            get
            {
                return _JournalItemID;
            }
            set
            {
                OnJournalItemIDChanging(value);
                ReportPropertyChanging("JournalItemID");
                _JournalItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JournalItemID");
                OnJournalItemIDChanged();
            }
        }
        private global::System.Guid _JournalItemID;
        partial void OnJournalItemIDChanging(global::System.Guid value);
        partial void OnJournalItemIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JournalName
        {
            get
            {
                return _JournalName;
            }
            set
            {
                OnJournalNameChanging(value);
                ReportPropertyChanging("JournalName");
                _JournalName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JournalName");
                OnJournalNameChanged();
            }
        }
        private global::System.String _JournalName;
        partial void OnJournalNameChanging(global::System.String value);
        partial void OnJournalNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JournalGroup
        {
            get
            {
                return _JournalGroup;
            }
            set
            {
                OnJournalGroupChanging(value);
                ReportPropertyChanging("JournalGroup");
                _JournalGroup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JournalGroup");
                OnJournalGroupChanged();
            }
        }
        private global::System.String _JournalGroup;
        partial void OnJournalGroupChanging(global::System.String value);
        partial void OnJournalGroupChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Keyword
        {
            get
            {
                return _Keyword;
            }
            set
            {
                OnKeywordChanging(value);
                ReportPropertyChanging("Keyword");
                _Keyword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Keyword");
                OnKeywordChanged();
            }
        }
        private global::System.String _Keyword;
        partial void OnKeywordChanging(global::System.String value);
        partial void OnKeywordChanged();

        #endregion
    }

    #endregion
    
}
